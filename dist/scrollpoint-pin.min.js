/*!
 * angular-ui-scrollpoint-pin
 * https://github.com/TechNaturally/ui-scrollpoint-pin
 * Version: 2.0.1 - 2016-02-10T20:55:29.810Z
 * License: MIT
 */
!function(){"use strict";angular.module("ui.scrollpoint.pin",["ui.scrollpoint"]).factory("ui.scrollpoint.Pin",["$timeout",function(t){var e={hide:function(t){!t.$element||!t.isPinned()||t.group&&t==t.group.active||(angular.isFunction(t.$element.hide)?t.$element.hide():(t.$element.css("display","none"),t.$element.css("visibility","hidden")))},show:function(t){t.$element&&(angular.isFunction(t.$element.show)?t.$element.show():(t.$element.css("display",null),t.$element.css("visibility",null)))},getOffset:function(t,e){var i;if(t&&t.$uiScrollpoint){var n=t.getOriginalBounds(),o=t.$uiScrollpoint,r=o.getEdge(e);if(r)for(var s in r){var l=o.getEdge(e,s);if(l){var a;l.absolute?(a=l.percent?l.shift/100*o.getTargetScrollHeight():l.shift,"bottom"==e&&(a=o.getTargetContentHeight()-a,o.hasTarget&&(a+=o.getTargetHeight()))):("top"==s?a=n.top:"bottom"==s&&(a=n.bottom),a+=l.shift),(angular.isUndefined(i)||a>=i)&&(i=a)}}}return i}},i={groups:{},newGroup:function(t){return{id:t,items:[],active:{},addItem:function(t){-1==this.items.indexOf(t)&&(this.items.push(t),t.group=this,t.$element&&t.$element.addClass("pin-grouped pin-group-"+this.id),this.refreshActive(t))},removeItem:function(t){var i=this.items.indexOf(t);-1!=i&&this.items.splice(i,1),t.group==this&&(t.group=void 0),t.$element&&t.$element.removeClass("pin-grouped pin-group-"+this.id),e.show(t),this.refreshActive(t)},refreshActive:function(t,i){if(t&&t.$uiScrollpoint){var n=t.$uiScrollpoint.edges;for(var o in n)if(angular.isUndefined(i)||o==i){var r,s;for(var l in this.items){var a=this.items[l];if(a.isPinned()&&a.$uiScrollpoint&&a.edge&&a.edge.scroll==o){var c=e.getOffset(a,o);angular.isDefined(c)&&(angular.isUndefined(r)||"top"==o&&c>=r||"bottom"==o&&r>=c)&&(r=c,s=a)}}this.active[o]=s,this.refreshVisibility(o),s&&e.show(s)}}},refreshVisibility:function(t){for(var i in this.items){var n=this.items[i];n.isPinned()&&n.edge&&n.edge.scroll==t&&n!=this.active[t]&&e.hide(n)}},getActive:function(t){return this.active[t]?this.active[t]:void 0},getFirst:function(t){var i,n;for(var o in this.items){var r=this.items[o],s=e.getOffset(r,t);angular.isDefined(s)&&(angular.isUndefined(n)||"top"==t&&n>=s||"bottom"==t&&s>=n)&&(n=s,i=r)}return i},pinned:function(t,e){this.refreshActive(t,e.scroll)},unpinned:function(t,i){this.refreshActive(t,i.scroll),e.show(t)}}},register:function(t,e){angular.isUndefined(this.groups[e])&&(this.groups[e]=this.newGroup(e)),this.groups[e].addItem(t)},unregister:function(t,e){e&&angular.isDefined(this.groups[e])?this.groups[e].removeItem(t):!e&&t.group&&t.group.removeItem(t)},pinned:function(t,e){t.group&&t.group.pinned(t,e)},unpinned:function(t,e){t.group&&t.group.unpinned(t,e)}},n={onWindow:void 0,newStack:function(){return{items:[],stacked:{},origEdges:{},targetRefresh:void 0,addItem:function(e){if(-1==this.items.indexOf(e)){this.items.push(e);var i=this.items.length-1;e.stack=this;var n=this;t(function(){n.origEdges[i]=angular.copy(e.$uiScrollpoint.edges)})}},removeItem:function(t){var e=this.items.indexOf(t);if(-1!=e){this.items.splice(e,1),this.origEdges[e]&&(this.applyEdges([{pin:t,edges:angular.copy(this.origEdges[e])}],150),this.origEdges[e]=void 0);for(var i in this.stacked){var n=this.stacked[i].indexOf(t);-1!=n&&this.stacked[i].splice(n,1)}for(var o in this.origEdges)o>e&&(this.origEdges[o-1]=this.origEdges[o],this.origEdges[o]=void 0)}t.stack==this&&(t.stack=void 0)},refreshEdges:function(t,e){if(e.scroll){var i=(t.getOriginalBounds(),[]);for(var n in this.items)if(this.items[n]!=t){var o=this.getNewEdges(this.items[n],e.scroll);o&&i.push({pin:this.items[n],edges:o})}this.applyEdges(i)}},applyEdges:function(e,i){if(angular.isUndefined(i)&&(i=100),e.length){var n=[];for(var o in e){var r=e[o];this.setEdges(r.pin,r.edges),r.pin.$uiScrollpoint.$target&&-1==n.indexOf(r.pin.$uiScrollpoint.$target)&&n.push(r.pin.$uiScrollpoint.$target)}if(n.length){this.targetRefresh&&t.cancel(this.targetRefresh);var s=this;this.targetRefresh=t(function(){for(var t in n)n[t].triggerHandler("scroll")},i).then(function(){s.targetRefresh=void 0})}}},setEdges:function(t,e){e=this.prepareEdgeAttr(e),t.unpin(),t.$attrs.$set("uiScrollpointEdge",angular.toJson(e))},prepareEdgeAttr:function(t){var e;for(var i in t)if(angular.isObject(t[i]))for(var n in t[i]){var o=t[i][n];angular.isUndefined(e)&&(e={}),angular.isUndefined(e[i])&&(e[i]={}),e[i][n]=angular.isObject(o)?o.absolute?o.shift+(o.percent?"%":""):(o.shift>=0?"+":"")+o.shift:o}else e[i]=t[i];return e},getOriginalEdge:function(t,e,i){var n,o=this.items.indexOf(t);if(-1!=o&&this.origEdges[o]){var r=this.origEdges[o];r[e]&&r[e][i]&&r[e][i]!==!0&&(n=r[e][i]),n||(n=t.$uiScrollpoint.default_edge)}return n},getNewEdges:function(t,e){var i=this.items.indexOf(t);if(-1!=i){var n=(this.origEdges[i],{}),o=!1;for(var r in t.$uiScrollpoint.edges)n[r]=t.$uiScrollpoint.edges[r];var s=t.$uiScrollpoint.getEdge(e);for(var l in s){var a=t.$uiScrollpoint.getEdge(e,l);if(a&&!a.absolute){var c=this.getStackTarget(t,e);if(t.stackTarget=c,c){var u=this.calculateShift(t,c,e);if(angular.isDefined(u)){var f=this.getOriginalEdge(t,e,l),h=(f?f.shift:0)-u;n[e][l].shift!=h&&(n[e][l]={shift:h,absolute:!1,percent:!1,pin_shift:!0},o=!0)}}}}if(o)return n}},calculateShift:function(t,e,i){var n,o=e.getBounds();if("top"==i?n=o.bottom:"bottom"==i&&(n=o.top),angular.isDefined(e.overflow)&&(n+=e.overflow),angular.isDefined(n)){if(t.$uiScrollpoint.hasTarget){var r=t.$uiScrollpoint.$target[0].getBoundingClientRect();n-=r.top}"bottom"==i&&(n-=t.$uiScrollpoint.getTargetHeight())}return n},getStackTarget:function(t,e){var i,n;if(this.stacked[e])for(var o in this.stacked[e]){var r=this.stacked[e][o];if(r!=t&&r.isPinned()&&this.shouldStack(t,e,r)){if(r.group&&r.group.getActive(e)!=r)continue;var s=r.getBounds();"top"==e&&(angular.isUndefined(n)||s.bottom>=n)?(n=s.bottom,i=r):"bottom"==e&&(angular.isUndefined(n)||s.top<=n)&&(n=s.top,i=r)}}return i},shouldStack:function(t,e,i){if(i.isPinned()&&t!=i&&t.stackGroupMatches(i.stackGroup)){i.group&&(i=i.group.getFirst(e));var n=i.getOriginalBounds(),o=t.getOriginalBounds();if((o.left>=n.left&&o.left<=n.right||o.right>=n.left&&o.right<=n.right||n.left>=o.left&&n.left<=o.right||n.right>=o.left&&n.right<=o.right)&&("top"==e&&o.top>=n.bottom||"bottom"==e&&o.bottom<=n.top)){if(!t.group)return!0;if(!i.group||t.group.id!=i.group.id){var r=t.group.getFirst(e);if(t==r||this.shouldStack(r,e,i))return!0}}}return!1},getStackedUnder:function(t,e){if(this.stacked[e]){var i,n;for(var o in this.stacked[e]){var r=this.stacked[e][o];if(r.stackTarget==t){var s=r.getBounds();"top"==e&&(angular.isUndefined(i)||s.bottom>=i)?(i=s.bottom,n=r):"bottom"==e&&(angular.isUndefined(i)||s.top<=i)&&(i=s.top,n=r)}}return n}},getStackBottom:function(t,e){for(var i,n=t;i=this.getStackedUnder(n,e);)n=i;return n},getStackTop:function(t,e){for(var i,n=t;i=n.stackTarget;)n=i;return n},refreshAllowances:function(t,e){for(var i=t;i=i.stackTarget;)i.calculateScrollAllowance()},pinned:function(e,i){if(i.scroll){angular.isUndefined(this.stacked[i.scroll])&&(this.stacked[i.scroll]=[]);var n=this.stacked[i.scroll].indexOf(e);if(-1==n){this.stacked[i.scroll].push(e);var o=this;t(function(){o.refreshEdges(e,i),o.refreshAllowances(e,i)},150)}}},unpinned:function(e,i){if(this.stacked[i.scroll]){var n=this.stacked[i.scroll].indexOf(e);if(-1!=n){this.stacked[i.scroll].splice(n,1);var o=this;t(function(){o.refreshEdges(e,i)}),t(function(){o.refreshAllowances(e,i)},151)}}}}},register:function(t){var e;t.$uiScrollpoint&&t.$uiScrollpoint.hasTarget&&t.$uiScrollpoint.$target?(angular.isUndefined(t.$uiScrollpoint.$target.stack)&&(t.$uiScrollpoint.$target.stack=this.newStack()),e=t.$uiScrollpoint.$target.stack):e=this.onWindow,e&&e.addItem(t)},unregister:function(t){t.stack&&t.stack.removeItem(t)},pinned:function(t,e){t.stack&&t.stack.pinned(t,e)},unpinned:function(t,e){t.stack&&t.stack.unpinned(t,e)}};n.onWindow=n.newStack();var o={pinned:function(t,e){o.Stack.pinned(t,e),o.Groups.pinned(t,e)},unpinned:function(t,e){o.Stack.unpinned(t,e),o.Groups.unpinned(t,e)},Groups:i,Stack:n};return o}]).directive("uiScrollpointPin",["ui.scrollpoint.Pin","$timeout",function(t,e){return{restrict:"A",priority:100,require:["uiScrollpoint","uiScrollpointPin"],controller:["$scope","ui.scrollpoint.Pin","$timeout",function(t,e,i){var n=this;this.$attrs=void 0,this.$element=void 0,this.$placeholder=void 0,this.$uiScrollpoint=void 0,this.edge=void 0,this.offset={},this.allowance=0,n.overflow=0,this.stackGroup=void 0;var o,r={},s=!1;this.repositionPinned=function(){if(n.$placeholder&&n.$uiScrollpoint){angular.isUndefined(o)&&(o=0);var t=n.$uiScrollpoint.getScrollOffset()-o,e=n.$uiScrollpoint.hasTarget?0:n.$uiScrollpoint.getScrollOffset(),i=e-n.offset.y;o=n.$uiScrollpoint.getScrollOffset(),n.allowance&&(n.overflow+=t,n.edge&&"top"==n.edge.scroll?(n.overflow>n.allowance&&(n.overflow=n.allowance),n.overflow>0&&(i-=n.overflow)):n.edge&&"bottom"==n.edge.scroll&&(n.overflow<n.allowance&&(n.overflow=n.allowance),n.overflow<0&&(i-=n.overflow))),n.$element.css("left",n.offset.x+"px"),n.$element.css("top",i+"px")}},this.calculateScrollAllowance=function(){if(n.stack&&n.$element&&n.edge){var t=n.allowance,e=n.stack.getStackTop(n,n.edge.scroll),i=n.stack.getStackBottom(n,n.edge.scroll);if("bottom"==n.edge.scroll&&e!=i){var o=e;e=i,i=o}var r=0,s=0;if(e){var l=e.getBounds();r=l.top+e.overflow}if(i){var a=i.getBounds();s=a.bottom+i.overflow}var c=s-r,u=n.$uiScrollpoint.getTargetHeight();n.allowance=c>u?c-u:0,"bottom"==n.edge.scroll&&(n.allowance*=-1),n.allowance!=t&&n.repositionPinned()}},this.setAttrs=function(t){this.$attrs=t},this.setElement=function(t){this.$element=t},this.setScrollpoint=function(t){this.$uiScrollpoint=t},this.setStackGroup=function(t){t&&!angular.isArray(t)&&(t=[t]),this.stackGroup=t},this.stackGroupMatches=function(t){if(this.stackGroup&&t){for(var e in this.stackGroup)if(-1!=t.indexOf(this.stackGroup[e]))return!0}else if(angular.isUndefined(this.stackGroup))return!0;return!1},this.getBounds=function(){return this.$element?this.$element[0].getBoundingClientRect():null},this.getOriginalBounds=function(){return this.$placeholder?this.$placeholder[0].getBoundingClientRect():this.getBounds()},this.isPinned=function(){return this.$placeholder?!0:!1},this.pin=function(t,o,l){if(!this.$placeholder&&this.$element&&this.$uiScrollpoint){if(this.offset.x=this.$element[0].offsetLeft,this.offset.y=this.$uiScrollpoint.getScrollOffset()-this.$element[0].offsetTop-l*("bottom"==t?-1:1),this.$placeholder=this.$element.clone(),this.$placeholder.addClass("placeholder"),this.$placeholder.css("visibility","hidden"),this.$element.after(this.$placeholder),s=this.$uiScrollpoint.hasTarget&&this.$uiScrollpoint.$target!=this.$element.parent()){var a=this.$element[0].getBoundingClientRect(),c=this.$uiScrollpoint.$target[0].getBoundingClientRect();this.offset.x=a.left,this.offset.y=-this.$uiScrollpoint.$target[0].offsetTop-(a.top-c.top+l),"bottom"==t&&(this.offset.y=-this.$uiScrollpoint.$target[0].offsetTop-this.$uiScrollpoint.$target[0].offsetHeight+this.$element[0].offsetHeight-(a.bottom-c.bottom-l)),this.$uiScrollpoint.$target.append(this.$element)}r.position=this.$element[0].style.position,r.top=this.$element[0].style.top,r.left=this.$element[0].style.left,r.width=this.$element[0].style.width,this.$element.css("width",this.$element[0].offsetWidth+"px"),this.$element.addClass("pinned"),this.$element.css("position","absolute"),this.edge={scroll:t,element:o},this.$uiScrollpoint.$target.on("scroll",n.repositionPinned),n.repositionPinned(),this.$uiScrollpoint.$target.on("resize",n.calculateScrollAllowance),i(function(){n.calculateScrollAllowance()},151),e.pinned(this,this.edge,l)}},this.unpin=function(){if(this.$placeholder&&this.$element&&this.$uiScrollpoint){this.$uiScrollpoint.$target.off("scroll",n.repositionPinned),o=void 0,this.overflow=0,this.$uiScrollpoint.$target.off("resize",n.calculateScrollAllowance),this.allowance=0,this.$element.removeClass("pinned");for(var t in r)this.$element.css(t,r[t]);s&&this.$placeholder.after(this.$element);var l=this.edge;this.edge=void 0,this.offset={},this.$placeholder.remove(),this.$placeholder=void 0,i(function(){n.$uiScrollpoint.cachePosition()}),e.unpinned(this,l)}}}],link:function(i,n,o,r){function s(){e(function(){c.$target.triggerHandler("scroll")},2)}var l,a,c=r[0],u=r[1];u.setAttrs(o),u.setElement(n),u.setScrollpoint(c),o.$observe("uiScrollpoint",function(t){u.unpin()}),angular.isUndefined(o.uiScrollpointPinOverlap)&&t.Stack.register(u),o.$observe("uiScrollpointPinOverlap",function(e){e=e||e===!1?i.$eval(e):!0,e?(u.unpin(),t.Stack.unregister(u),n.addClass("pin-overlap")):(t.Stack.register(u),n.removeClass("pin-overlap"))}),o.$observe("uiScrollpointAbsolute",function(i){t.Stack.unregister(u),e(function(){t.Stack.register(u)})}),o.$observe("uiScrollpointEnabled",function(e){e=i.$eval(e),e?(angular.isUndefined(o.uiScrollpointPinOverlap)&&t.Stack.register(u),l&&t.Groups.register(u,l)):(u.unpin(),t.Stack.unregister(u),t.Groups.unregister(u,l))}),o.$observe("uiScrollpointPinGroup",function(e){e?(l&&t.Groups.unregister(u,l),l=e.replace(/[^a-zA-Z0-9-]/g,"-"),t.Groups.register(u,l)):(t.Groups.unregister(u,l),l=void 0)}),o.$observe("uiScrollpointPinStack",function(t){a=t?t.replace(/[^a-zA-Z0-9-,]/g,"-").split(","):void 0,u.setStackGroup(a)}),c.addAction(function(t,e,i,n){t>=0&&!u.$placeholder?u.pin(i,n,t):0>t&&u.$placeholder&&u.unpin()}),i.$on("scrollpointShouldReset",s)}}}])}();