/*!
 * angular-ui-scrollpoint-pin
 * https://github.com/TechNaturally/ui-scrollpoint-pin
 * Version: 2.0.1 - 2016-01-19T17:29:57.252Z
 * License: MIT
 */
!function(){"use strict";angular.module("ui.scrollpoint.pin",["ui.scrollpoint"]).factory("ui.scrollpoint.Pin",["$timeout",function(t){var i={hide:function(t){!t.$element||!t.isPinned()||t.group&&t==t.group.active||(angular.isFunction(t.$element.hide)?t.$element.hide():(t.$element.css("display","none"),t.$element.css("visibility","hidden")))},show:function(t){t.$element&&(angular.isFunction(t.$element.show)?t.$element.show():(t.$element.css("display",null),t.$element.css("visibility",null)))},getOffset:function(t,i){var e;if(t&&t.$uiScrollpoint){var n=t.getOriginalBounds(),s=t.$uiScrollpoint,o=s.getEdge(i);if(o)for(var r in o){var l=s.getEdge(i,r);if(l){var a;l.absolute?(a=l.percent?l.shift/100*s.getTargetScrollHeight():l.shift,"bottom"==i&&(a=s.getTargetContentHeight()-a,s.hasTarget&&(a+=s.getTargetHeight()))):("top"==r?a=n.top:"bottom"==r&&(a=n.bottom),a+=l.shift),(angular.isUndefined(e)||a>=e)&&(e=a)}}}return e}},e={groups:{},newGroup:function(t){return{id:t,items:[],active:{},addItem:function(t){-1==this.items.indexOf(t)&&(this.items.push(t),t.group=this,t.$element&&t.$element.addClass("pin-grouped pin-group-"+this.id),this.refreshActive(t))},removeItem:function(t){var e=this.items.indexOf(t);-1!=e&&this.items.splice(e,1),t.group==this&&(t.group=void 0),t.$element&&t.$element.removeClass("pin-grouped pin-group-"+this.id),i.show(t),this.refreshActive(t)},refreshActive:function(t,e){if(t&&t.$uiScrollpoint){var n=t.$uiScrollpoint.edges;for(var s in n)if(angular.isUndefined(e)||s==e){var o,r;for(var l in this.items){var a=this.items[l];if(a.isPinned()&&a.$uiScrollpoint&&a.edge&&a.edge.scroll==s){var u=i.getOffset(a,s);angular.isDefined(u)&&(angular.isUndefined(o)||"top"==s&&u>=o||"bottom"==s&&o>=u)&&(o=u,r=a)}}this.active[s]=r,this.refreshVisibility(s),r&&i.show(r)}}},refreshVisibility:function(t){for(var e in this.items){var n=this.items[e];n.isPinned()&&n.edge&&n.edge.scroll==t&&n!=this.active[t]&&i.hide(n)}},getActive:function(t){return this.active[t]?this.active[t]:void 0},getFirst:function(t){var e,n;for(var s in this.items){var o=this.items[s],r=i.getOffset(o,t);angular.isDefined(r)&&(angular.isUndefined(n)||"top"==t&&n>=r||"bottom"==t&&r>=n)&&(n=r,e=o)}return e},pinned:function(t,i){this.refreshActive(t,i.scroll)},unpinned:function(t,e){this.refreshActive(t,e.scroll),i.show(t)}}},register:function(t,i){angular.isUndefined(this.groups[i])&&(this.groups[i]=this.newGroup(i)),this.groups[i].addItem(t)},unregister:function(t,i){i&&angular.isDefined(this.groups[i])?this.groups[i].removeItem(t):!i&&t.group&&t.group.removeItem(t)},pinned:function(t,i){t.group&&t.group.pinned(t,i)},unpinned:function(t,i){t.group&&t.group.unpinned(t,i)}},n={onWindow:void 0,newStack:function(){return{items:[],stacked:{},origEdges:{},targetRefresh:void 0,addItem:function(i){if(-1==this.items.indexOf(i)){this.items.push(i);var e=this.items.length-1;i.stack=this;var n=this;t(function(){n.origEdges[e]=angular.copy(i.$uiScrollpoint.edges)})}},removeItem:function(t){var i=this.items.indexOf(t);if(-1!=i){this.items.splice(i,1),this.origEdges[i]&&(this.applyEdges([{pin:t,edges:angular.copy(this.origEdges[i])}],150),this.origEdges[i]=void 0);for(var e in this.stacked){var n=this.stacked[e].indexOf(t);-1!=n&&this.stacked[e].splice(n,1)}for(var s in this.origEdges)s>i&&(this.origEdges[s-1]=this.origEdges[s],this.origEdges[s]=void 0)}t.stack==this&&(t.stack=void 0)},refreshEdges:function(t,i){if(i.scroll){var e=(t.getOriginalBounds(),[]);for(var n in this.items)if(this.items[n]!=t){var s=this.getNewEdges(this.items[n],i.scroll);s&&e.push({pin:this.items[n],edges:s})}this.applyEdges(e)}},applyEdges:function(i,e){if(angular.isUndefined(e)&&(e=100),i.length){var n=[];for(var s in i){var o=i[s];this.setEdges(o.pin,o.edges),o.pin.$uiScrollpoint.$target&&-1==n.indexOf(o.pin.$uiScrollpoint.$target)&&n.push(o.pin.$uiScrollpoint.$target)}if(n.length){this.targetRefresh&&t.cancel(this.targetRefresh);var r=this;this.targetRefresh=t(function(){for(var t in n)n[t].triggerHandler("scroll")},e).then(function(){r.targetRefresh=void 0})}}},setEdges:function(t,i){i=this.prepareEdgeAttr(i),t.unpin(),t.$attrs.$set("uiScrollpointEdge",angular.toJson(i))},prepareEdgeAttr:function(t){var i;for(var e in t)if(angular.isObject(t[e]))for(var n in t[e]){var s=t[e][n];angular.isUndefined(i)&&(i={}),angular.isUndefined(i[e])&&(i[e]={}),i[e][n]=angular.isObject(s)?s.absolute?s.shift+(s.percent?"%":""):(s.shift>=0?"+":"")+s.shift:s}else i[e]=t[e];return i},getOriginalEdge:function(t,i,e){var n,s=this.items.indexOf(t);if(-1!=s&&this.origEdges[s]){var o=this.origEdges[s];o[i]&&o[i][e]&&o[i][e]!==!0&&(n=o[i][e]),n||(n=t.$uiScrollpoint.default_edge)}return n},getNewEdges:function(t,i){var e=this.items.indexOf(t);if(-1!=e){var n=(this.origEdges[e],{}),s=!1;for(var o in t.$uiScrollpoint.edges)n[o]=t.$uiScrollpoint.edges[o];var r=t.$uiScrollpoint.getEdge(i);for(var l in r){var a=t.$uiScrollpoint.getEdge(i,l);if(a&&!a.absolute){var u=this.calculateShift(t,i),c=this.getOriginalEdge(t,i,l),h=(c?c.shift:0)-u;n[i][l].shift!=h&&(n[i][l]={shift:h,absolute:!1,percent:!1,pin_shift:!0},s=!0)}}if(s)return n}},calculateShift:function(t,i){var e;if(this.stacked[i]){for(var n in this.stacked[i]){var s=this.stacked[i][n];if(s!=t&&s.isPinned()&&this.shouldStack(t,i,s)){if(s.group&&s.group.getActive(i)!=s)continue;var o=s.getBounds();"top"==i&&(angular.isUndefined(e)||o.bottom>=e)?e=o.bottom:"bottom"==i&&(angular.isUndefined(e)||o.top<=e)&&(e=o.top)}}if(angular.isDefined(e)){if(t.$uiScrollpoint.hasTarget){var r=t.$uiScrollpoint.$target[0].getBoundingClientRect();e-=r.top}"bottom"==i&&(e-=t.$uiScrollpoint.getTargetHeight())}}return e?e:0},shouldStack:function(t,i,e){if(e.isPinned()&&t!=e){e.group&&(e=e.group.getFirst(i));var n=e.getOriginalBounds(),s=t.getOriginalBounds();if((s.left>=n.left&&s.left<=n.right||s.right>=n.left&&s.right<=n.right||n.left>=s.left&&n.left<=s.right||n.right>=s.left&&n.right<=s.right)&&("top"==i&&s.top>=n.bottom||"bottom"==i&&s.bottom<=n.top)){if(!t.group)return!0;if(!e.group||t.group.id!=e.group.id){var o=t.group.getFirst(i);if(t==o||this.shouldStack(o,i,e))return!0}}}return!1},pinned:function(i,e){if(e.scroll){angular.isUndefined(this.stacked[e.scroll])&&(this.stacked[e.scroll]=[]);var n=this.stacked[e.scroll].indexOf(i);if(-1==n){{i.$uiScrollpoint.getEdge(e.scroll,e.element)}this.stacked[e.scroll].push(i);var s=this;t(function(){s.refreshEdges(i,e)},150)}}},unpinned:function(i,e){if(this.stacked[e.scroll]){var n=this.stacked[e.scroll].indexOf(i);if(-1!=n){this.stacked[e.scroll].splice(n,1);var s=this;t(function(){s.refreshEdges(i,e)})}}}}},register:function(t){var i;t.$uiScrollpoint&&t.$uiScrollpoint.hasTarget&&t.$uiScrollpoint.$target?(angular.isUndefined(t.$uiScrollpoint.$target.stack)&&(t.$uiScrollpoint.$target.stack=this.newStack()),i=t.$uiScrollpoint.$target.stack):i=this.onWindow,i&&i.addItem(t)},unregister:function(t){t.stack&&t.stack.removeItem(t)},pinned:function(t,i){t.stack&&t.stack.pinned(t,i)},unpinned:function(t,i){t.stack&&t.stack.unpinned(t,i)}};n.onWindow=n.newStack();var s={pinned:function(t,i){s.Stack.pinned(t,i),s.Groups.pinned(t,i)},unpinned:function(t,i){s.Stack.unpinned(t,i),s.Groups.unpinned(t,i)},Groups:e,Stack:n};return s}]).directive("uiScrollpointPin",["ui.scrollpoint.Pin","$timeout",function(t,i){return{restrict:"A",priority:100,require:["uiScrollpoint","uiScrollpointPin"],controller:["$scope","ui.scrollpoint.Pin","$timeout",function(t,i,e){var n=this;this.$attrs=void 0,this.$element=void 0,this.$placeholder=void 0,this.$uiScrollpoint=void 0,this.edge=void 0,this.offset={};var s={},o=!1;this.repositionPinned=function(){if(n.$placeholder&&n.$uiScrollpoint){var t=n.$uiScrollpoint.hasTarget?0:n.$uiScrollpoint.getScrollOffset();n.$element.css("left",n.offset.x+"px"),n.$element.css("top",t-n.offset.y+"px")}},this.setAttrs=function(t){this.$attrs=t},this.setElement=function(t){this.$element=t},this.setScrollpoint=function(t){this.$uiScrollpoint=t},this.getBounds=function(){return this.$element?this.$element[0].getBoundingClientRect():null},this.getOriginalBounds=function(){return this.$placeholder?this.$placeholder[0].getBoundingClientRect():this.getBounds()},this.isPinned=function(){return this.$placeholder?!0:!1},this.pin=function(t,e,r){if(!this.$placeholder&&this.$element&&this.$uiScrollpoint){if(this.offset.x=this.$element[0].offsetLeft,this.offset.y=this.$uiScrollpoint.getScrollOffset()-this.$element[0].offsetTop-r*("bottom"==t?-1:1),this.$placeholder=this.$element.clone(),this.$placeholder.addClass("placeholder"),this.$placeholder.css("visibility","hidden"),this.$element.after(this.$placeholder),o=this.$uiScrollpoint.hasTarget&&this.$uiScrollpoint.$target!=this.$element.parent()){var l=this.$element[0].getBoundingClientRect(),a=this.$uiScrollpoint.$target[0].getBoundingClientRect();this.offset.x=l.left,this.offset.y=-this.$uiScrollpoint.$target[0].offsetTop-(l.top-a.top+r),"bottom"==t&&(this.offset.y=-this.$uiScrollpoint.$target[0].offsetTop-this.$uiScrollpoint.$target[0].offsetHeight+this.$element[0].offsetHeight-(l.bottom-a.bottom-r)),this.$uiScrollpoint.$target.append(this.$element)}s.position=this.$element[0].style.position,s.top=this.$element[0].style.top,s.left=this.$element[0].style.left,s.width=this.$element[0].style.width,this.$element.css("width",this.$element[0].offsetWidth+"px"),this.$element.addClass("pinned"),this.$element.css("position","absolute"),this.edge={scroll:t,element:e},this.$uiScrollpoint.$target.on("scroll",n.repositionPinned),n.repositionPinned(),i.pinned(this,this.edge,r)}},this.unpin=function(){if(this.$placeholder&&this.$element&&this.$uiScrollpoint){this.$uiScrollpoint.$target.off("scroll",n.repositionPinned),this.$element.removeClass("pinned");for(var t in s)this.$element.css(t,s[t]);o&&this.$placeholder.after(this.$element);var r=this.edge;this.edge=void 0,this.offset={},this.$placeholder.remove(),this.$placeholder=void 0,e(function(){n.$uiScrollpoint.cachePosition()}),i.unpinned(this,r)}}}],link:function(e,n,s,o){function r(){i(function(){a.$target.triggerHandler("scroll")},2)}var l,a=o[0],u=o[1];u.setAttrs(s),u.setElement(n),u.setScrollpoint(a),s.$observe("uiScrollpoint",function(t){u.unpin()}),angular.isUndefined(s.uiScrollpointPinOverlap)&&t.Stack.register(u),s.$observe("uiScrollpointPinOverlap",function(i){i=i||i===!1?e.$eval(i):!0,i?(u.unpin(),t.Stack.unregister(u),n.addClass("pin-overlap")):(t.Stack.register(u),n.removeClass("pin-overlap"))}),s.$observe("uiScrollpointAbsolute",function(e){t.Stack.unregister(u),i(function(){t.Stack.register(u)})}),s.$observe("uiScrollpointEnabled",function(i){i=e.$eval(i),i?(angular.isUndefined(s.uiScrollpointPinOverlap)&&t.Stack.register(u),l&&t.Groups.register(u,l)):(u.unpin(),t.Stack.unregister(u),t.Groups.unregister(u,l))}),s.$observe("uiScrollpointPinGroup",function(i){i?(l&&t.Groups.unregister(u,l),l=i.replace(/[^a-zA-Z0-9-]/g,"-"),t.Groups.register(u,l)):(t.Groups.unregister(u,l),l=void 0)}),a.addAction(function(t,i,e,n){t>=0&&!u.$placeholder?u.pin(e,n,t):0>t&&u.$placeholder&&u.unpin()}),e.$on("scrollpointShouldReset",r)}}}])}();